@page "/learnBlazor/lifecycle"

<h3>LifeCycle</h3>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> @* button that increments the counter *@

<div class="border">
    <_LifeCycleChild> CountValue"@currentCount"</_LifeCycleChild> @*Changing the counter value, here in the parent component*@
</div>

<hr />
@foreach (var item in EventType)
{
    @item // display item
    <hr />
    // adds a horizontal line
}

@code {
    private int currentCount = 0;

    List<string> EventType = new List<string>(); // Will log all created events

    private void IncrementCount()
    {
        currentCount++; // increment the counter
    }

    protected override void OnInitialized()
    {
        EventType.Add("Onintialized is called");
    }
    protected override async Task OnInitializedAsync()
    {
        EventType.Add("OnintializedAsync is called");

    }

    protected override void OnParametersSet()
    {
        EventType.Add("OnParametersSet is called");
    }
    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("OnParametersSetAsync is called");

    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            currentCount = 111;
        }
        else
        {
            currentCount = 999;
        }
        EventType.Add("OnAfterRender is called");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        EventType.Add("OnAfterRenderAsync is called");
    }
    protected override bool ShouldRender()
    {
        EventType.Add("ShouldRender is called");
        return true;
    }

}




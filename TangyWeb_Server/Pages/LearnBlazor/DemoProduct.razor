@page "/learnBlazor/demoproduct"

<h2 class="text-primary">DemoProduct</h2>
<p>Favorites Total : @SelectedFavouriteCount</p>

<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
            @*Passing OnFavoriteUdated to the indvidual product*@
            <_IndividualProduct Product="prod" OnFavoriteUpdated="FavoriteCountUpdate">
                OnLastSelectedProductChange="SelectedProductUpdate"
            </_IndividualProduct>
        }
    </div>
</div>


@code {
    List<Demo_Product> Products = new();

    @*will hold the number amount of whats added to favorites*@
    private int SelectedFavouriteCount { get; set; } = 0;

    private string LastSelectedProductName { get; set; }


    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 10.99,
            ProductProperties = new()
            {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
                }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new()
            {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
                }
        });
    }

    @*Parent component FavoriteCountUpdate*@
    @*Method that will increment and decrement the counter*@
    @*Invoked everytime the checkbox is toggled*@
    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    @*Update to last selected product name with the product name as The Parameter.*@
    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}
}


@*<h3>Component1</h3>*@


<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProduct(args,Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>

    @*onchange event*@
    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorite<br /><br />
    Name - @Product.Name<br />
    Show Properties :
    <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive ? "checked":null)" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="@Product.IsActive">
    </_EditDeleteButton>
</div>

@*child components*@
@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    @*EventCallback*@
    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnlastSelectedProductChange { get; set; }

    @*Child Component of FavoriteCountUpdate from DemoProduct*@
    @*Click on favorites selection to invoke method*@
    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        @*explicitly converting to boolean*@
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        @*since this will always be a string.. DoNot explicitly convert to bool.*@
        await OnlastSelectedProductChange.InvokeAsync(name);
    }

}

